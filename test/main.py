import telebot
import requests

TOKEN = ""
EXCHANGE_RATE = 6.42  
bot = telebot.TeleBot(TOKEN)
white_list = []#–ù–ê–î–û –í–°–¢–ê–í–ò–¢–¨ ID

def bool_login(chat_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ ID –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ"""
    return chat_id in white_list  

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
    if bool_login(message.chat.id):
        bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∞—Ä—Ç–∏–∫—É–ª!")  
    else:
        bot.reply_to(message, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        white_list.append(message.chat.id)  
        print(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π ID: {message.chat.id}")  

@bot.message_handler(content_types=['text'])  
def handle_text(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    user_text = message.text.lower()
    
    if bool_login(message.chat.id):
        bot.reply_to(message, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {user_text}")
        
        product_info = get_html(user_text)  
        price_info = get_price(user_text)

        if product_info and price_info:
            bot.reply_to(message, f"üîπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n{product_info}")
            bot.reply_to(message, f"üí∞ –¶–µ–Ω–∞: {price_info['current_price']} ‚Ç∏\nüìä –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {price_info['average_price']} ‚Ç∏")
            bot.reply_to(message, f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {price_info['recommendation']}")
        else:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞! –î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª.")
    else:
        bot.reply_to(message, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")

def get_rating(articul):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –æ —Ç–æ–≤–∞—Ä–µ"""
    url = f"https://card.wb.ru/cards/v2/detail?appType=1&curr=rub&dest=269&spp=30&hide_dtype=13&ab_testing=false&lang=ru&nm={articul}"

    try:
        response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
        response.raise_for_status()   
        data = response.json()

        if "data" in data and "products" in data["data"]:
            product = data["data"]["products"][0]
            rating = product.get("reviewRating", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
            feedback = product.get("feedbacks", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        else:
            rating, feedback = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

        return rating, feedback  

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

def get_otnoch(rating, feedback):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    try:
        otnoch = float(rating) / int(feedback) if feedback != "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" and feedback != "0" else 0
        
        if otnoch < 0.0005:
            return "‚úÖ –¢–æ–≤–∞—Ä –æ—Ç–ª–∏—á–Ω—ã–π!"
        elif otnoch < 0.005:
            return "‚úÖ –¢–æ–≤–∞—Ä —Ö–æ—Ä–æ—à–∏–π!"
        elif otnoch < 0.5:
            return "‚ö†Ô∏è –¢–æ–≤–∞—Ä –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π."
        else:
            return "‚ùå –ù–µ —Å–æ–≤–µ—Ç—É—é —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä."
    except (ValueError, ZeroDivisionError):
        return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."

def get_html(articul):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GET-–∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ"""
    url = f"https://alm-basket-cdn-01.geobasket.ru/vol{articul[:4]}/part{articul[:6]}/{articul}/info/ru/card.json"

    try:
        response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
        response.raise_for_status()   
        data = response.json()  

        product_name = data.get("imt_name", "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")    
        description = data.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")  
        image_url = data.get("photo_links", ["–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"])[0]  

        rating, feedback = get_rating(articul)  
        recommendation = get_otnoch(rating, feedback)  

        return f"""
üîπ **{product_name}**
‚≠ê –†–µ–π—Ç–∏–Ω–≥: {rating}
üì¢ –û—Ç–∑—ã–≤–æ–≤: {feedback}
üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {recommendation}
üìú –û–ø–∏—Å–∞–Ω–∏–µ: {description}
üñº –§–æ—Ç–æ: {image_url}
        """

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö!"

def process_number(num):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É, —É–¥–∞–ª—è–µ—Ç –¥–≤–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ"""
    string_price = str(num)  
    modified_string = string_price[:-2]  
    modified_num = int(modified_string)  
    result = modified_num * EXCHANGE_RATE  
    return result

def get_price(articul):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GET-–∑–∞–ø—Ä–æ—Å, –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ü–µ–Ω—É –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ —Ç–µ–Ω–≥–µ"""
    url = f"https://alm-basket-cdn-01.geobasket.ru/vol{articul[:4]}/part{articul[:6]}/{articul}/info/price-history.json"

    try:
        response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
        response.raise_for_status()  
        data = response.json()  

        prices_rub = [item["price"]["RUB"] for item in data]  

        if prices_rub:
            current_price_kzt = round(process_number(prices_rub[-1]), 2)
            average_price_kzt = round(sum(process_number(p) for p in prices_rub) / len(prices_rub), 2)

            if average_price_kzt > current_price_kzt:
                recommendation = "‚úÖ –¶–µ–Ω–∞ –≤—ã–≥–æ–¥–Ω–∞, –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—Ç—å!"
            elif average_price_kzt < current_price_kzt:
                recommendation = "‚ö†Ô∏è –¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ, –ø–æ–∫—É–ø–∫–∞ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è!"
            else:
                recommendation = "‚ÑπÔ∏è –¶–µ–Ω—ã —Å—Ç–∞–±–∏–ª—å–Ω—ã, —Ä–µ—à–∞–π—Ç–µ —Å–∞–º–∏."

        else:
            current_price_kzt, average_price_kzt = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            recommendation = "‚ùå –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö."

        return {
            "current_price": current_price_kzt,
            "average_price": average_price_kzt,
            "recommendation": recommendation
        }

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

bot.polling()
